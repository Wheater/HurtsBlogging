<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">

  <channel>
    <title>Hurts Blogging</title>
    <link>http://www.hurtsblogging.com</link>
    <description>Family and Software Blog</description>
    <item>
      <title>on being pregnant</title>
      <link>http://hurtsblogging.com/views/singlePost/13</link>
      <description><![CDATA[<html><body><p><b id="docs-internal-guid-a9f2fa1b-96ac-fc9f-6d19-7e53eb17ad3c"></b></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">i thought i’d jot down some of my recent thoughts on pregnancy. i want to always remember this time; it is so special. so, in no particular order, here we go…</span></p><p><br/></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">-i recognize what a great privilege, joy and gift it is to be able to carry our baby. i don’t take for granted the blessings that i a) am a woman, 2) whose body can carry a child and 3) whose body is carrying a child...our child. i just feel supremely lucky to be chosen to carry our little T.M., which leads me to…</span></p><p><br/></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">-feeling him kick and roll and squirm inside me is one of the best feeling in the world. no exaggeration. i hope i never forget the feeling. i think i’ll be a little sad when i don’t anymore, but that means our little babe is here, so win/win.</span></p><p><br/></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">-my once-innie belly button is pushing its way out. as of september 3, it’s nearly flush with my stomach. it’ll be an outie before long! guess that means all is growing as it’s supposed to.</span></p><p><br/></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">-we’re beginning the nursery-decorating process soon! well, we’ve got lots of stuff for baby’s room, now we just need to empty baby’s room to get it to a state where it can be painted and set up. we’ve found a few willing volunteer painters in my mom and sister, so we’ll soon be putting them to work. ;-)</span></p><p><br/></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">-life is peachy right now.</span></p><p><br/></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">i’ll conclude this post with a photo of photos, taken tonight for no good reason other than because i like his face. *heart eyes emoji*</span></p><p dir="ltr"><img class="img-responsive" src="https://farm1.staticflickr.com/568/21103148336_b93a427896_k.jpg"/><span style="color: #000000;background-color: transparent;"><br/></span></p>           </body></html>]]></description>
    </item>
    <item>
      <title>SQL Test Smell</title>
      <link>http://hurtsblogging.com/views/singlePost/10</link>
      <description><![CDATA[<html><body><p></p><p>I recently ran into a problem where a SQL query took ~9-10 seconds per run. The application depending on this query needed a faster response time as an alternative to asynchronous loading of the data (maybe both would've been good). The query was selecting a set of data, then using OUTER APPLY to perform a SELECT statement on each row searching for a related transaction ID as you can see below:</p><blockquote><pre>SELECT E.Date, E.Amount, T.ID, E.Message, E.Type, E.fkIID, T.ID AS TransactionID , RelatedTransactionID &#10;FROM Table1 T WITH (NOLOCK) &#10;INNER JOIN Table2 E WITH (NOLOCK) ON T.ID = E.ID&#10;INNER JOIN Table3 C WITH (NOLOCK) ON C.ID = E.ID&#10;OUTER APPLY &#10;(&#10;    SELECT TOP 1 H.ID AS RelatedTransactionID &#10;    FROM Table1 H WITH (NOLOCK) &#10;    WHERE CAST(T.Date AS DATE) = CAST(H.Date AS DATE)&#10;      AND T.Amount = H.Amount AND T.ID &lt;&gt; H.ID&#10;<span>      AND H.StatusID = 3&#10;      AND T.GID= H.GID&#10;) g&#10;</span><span>WHERE T.StatusID IN (2, 5)AND C.ID IS NOT NULL &#10;  AND C.ID &lt;&gt; 0&#10;  AND E.ID IS NOT NULL &#10;-----------------------------------------&#10;<span style="color: rgb(51, 51, 51);float: none;background-color: rgb(255, 255, 255);">Run time: 10s</span>&#10;</span></pre><p></p><p style="color: rgb(51, 51, 51);background-color: rgb(255, 255, 255);"><br/></p><p style="color: rgb(51, 51, 51);background-color: rgb(255, 255, 255);">At first glance, I saw no problem with the query, but when I began testing with data, the run time was much too high - it smelled. It turns out that OUTER APPLY was operating on every row in the query before the WHERE clause is applied. Because the tables combined contained hundreds of thousands of rows, the performance was abysmal. <br/><br/>After digging into the details, the solution was clear, gather the small about of table data and only then get the related transaction data needed. Lesson learned here is that if a problem seems like it should be simple, further investigation can usually prove your instincts correct.</p><p></p><pre><span>SELECT t.Date, t.Amount, T.ID, t.Message, t.Type, t.fkIID, tr.ID AS RelatedTransactionID &#10;FROM &#10;(&#10;    SELECT E.PostDateTime, E.Amount, T.ID, E.R_Message, E.Type, E.fkIID, T.ID AS TransactionID, T.Date, T.GID&#10;    FROM HPA_Production.dbo.Table1 T WITH (NOLOCK) &#10;    INNER JOIN Table2 E WITH (NOLOCK) ON T.ID = E.ID&#10;    INNER JOIN Table3 C WITH (NOLOCK) ON C.CID = E.ID&#10;    WHERE T.StatusID IN (2, 5)AND C.CCJournalID IS NOT NULL &#10;      AND C.CCJournalID &lt;&gt; 0&#10;      AND E.ReconciliationID IS NOT NULL &#10;      AND E.ReconciliationID &lt;&gt; 0&#10;      AND E.CreditCardProcessorID = @processorID&#10;) t&#10;LEFT JOIN Table1 TR ON TR.ID &lt;&gt; T.ID   &#10;  AND CAST(T.Date AS DATE) = CAST(TR.Date AS DATE)  &#10;  AND T.Amount = TR.Amount  &#10;  AND T.ID &lt;&gt; TR.ID  &#10;  AND TR.StatusID = 3  &#10;------------------------&#10;<span style="color: rgb(51, 51, 51);float: none;background-color: rgb(255, 255, 255);">Run time: 0s</span></span></pre></blockquote><p></p></body></html>]]></description>
    </item>
    <item>
      <title>Array and string manipulation in Javascript</title>
      <link>http://hurtsblogging.com/views/singlePost/8</link>
      <description><![CDATA[<html><body><p>Learning Javascript has been an absolute blast over the past month or so. This website was created from scratch with Javascript, CSS and HTML - even the backend is written is NodeJS. To continue learning more than just frameworks, I am delving deeper into the language to learn its native offerings and inner workings. </p><p>To sharpen my skills, I took to <a href="http://www.careercup.com/book" target="_blank">Cracking the Coding Interview</a> to practice a few array and string manipulation problems. I've worked them out below in JSFiddles. </p><p><br/></p><p><u><a href="https://jsfiddle.net/ekbba0a6/" target="_blank"><b>Reverse a string in place - no additional data structures</b></a></u></p><p>This is a pretty straightforward starting point, with the only minor trick preventing the use of a temporary string to hold the new, reversed string. Because Javascript ship with a replace method, this made the problem slightly more challenging as well. </p><p>The first step I took was to create the replaceAt method using the following code: </p><pre>function replaceAt(initial, index, input){    &#10;<span>  return initial.substr(0, index) + input + initial.substr(index + 1, initial.length);&#10;</span>}</pre><p>Using substr, we can return a string identical to the initial string with one char replaced by the input at the given index.</p><p>Next we build the reverse function to iterate over half of the length of the string, reversing two chars in each iteration.</p><pre>function reverse(input){        &#10;  var tempFront = '';    &#10;  var tempBack = '';        &#10;<span>  &#10;</span><span>  for(var i = 0; i &lt; input.length/2; i++){        &#10;    tempFront = input.charAt(i);        &#10;    tempBack = input.charAt(input.length - 1 - i);                &#10;</span><span>    &#10;</span><span>    input = replaceAt(input, i, tempBack);        &#10;    input = replaceAt(input, input.length - 1 - i, tempFront);    &#10;  }   &#10;&#10;  return input;&#10;} </span></pre><p>This would have been a bit easier with a built in replace function, but overall still a pretty simple problem. </p><p>The following problem is where things got a bit more interesting with recursion!</p><p><u><br/></u></p><p><u><b><a href="https://jsfiddle.net/rq8uxeut/" target="_blank">Replace all spaces in a string with %20. Perform this in place</a></b></u></p><p>Below you'll see a very similar string splice function the previous problem. This enables us to replace a space with the given input value, in this case, %20. </p><p>The more interesting part of this is recursion. Recursion is a method of iterating over an string, binary tree, array or similar type of data structures. For loops and while loops do this too, but recursion differs in its method of iteration. A recursive method calls itself at the end of one iteration. You can see in the replaceSpaces method that if the index is not equal to -1, the function calls itself again. I used this method to traverse the string to find all instances of a blank space (because Javascript's indexOf method only finds the first instance of the input value). </p><pre>function replaceSpaces(input){    &#10;  var index = input.indexOf(' ');        &#10;  if(index != -1){        &#10;    input = spliceStr(input, index, '%20');                &#10;    return replaceSpaces(input);    &#10;  } else {     &#10;    return input;     &#10;  }&#10;}&#10;&#10;function spliceStr(initial, index, value){     &#10;  return initial.slice(0, index) + value + initial.slice(index + 1, initial.length);   &#10;}<u><br/></u></pre><p>I'm always glad to hear of other ways to solve a problem, so let me know if you have a more efficient way to do this!</p></body></html>]]></description>
    </item>
    <item>
      <title>The premiere post</title>
      <link>http://hurtsblogging.com/views/singlePost/6</link>
      <description><![CDATA[<html><body><p><b id="docs-internal-guid-760c858f-1599-5155-eac2-fdbdeef5cb13"></b></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">How does one begin one’s first blog post on the website her husband dedicatedly built from scratch? I suppose with a brief orientation about who we are, The Hurts.</span></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">I’m Elizabeth, the Mrs. of the household, wife to the aforementioned hardworking, inquisitive husband, Eric, momma to our two dog-ters, Sammy and Lola, and also to our little Baby H on the way, who’s due December 2015.</span></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">We’ve planted our flag and made our nest in a small (not really, we wish) town on the outskirts of Houston, where suburbia meets the country. </span></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">Eric and I are high school sweethearts, together for 10 years and married for three. Just like the day we met and every day since then, I’m head over heels for him, and thank God every day (100x a day) for the life we’ve built, hand-in-hand. I highly recommend being married to your best friend. </span></p><p dir="ltr"><span style="color: #000000;background-color: transparent;">And here we are, at the beginning of the next wonderful chapter with our wee one on the way (it’s a boy, for whom we are SO grateful). It’s our hope that this blog documents bits and pieces of our world for family and friends, but mostly for ourselves. These are the glory days!</span></p>           </body></html>]]></description>
    </item>
</channel>

</rss>